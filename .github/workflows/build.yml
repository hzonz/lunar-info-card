name: Build & Release Lunar Info Card

permissions:
  contents: write

on:
  pull_request:
    types: [closed]

jobs:
  build-release:
    # 仅在 PR merge 到 main 时运行
    if: github.event.pull_request.merged == true && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout 仓库
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2️⃣ 设置 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3️⃣ 安装依赖
      - name: Install dependencies
        run: npm install

      # 4️⃣ Build Lunar Info Card
      - name: Build Lunar Info Card
        run: npm run build

      # 5️⃣ 提取版本号
      - name: Extract version
        id: get_version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

      # 6️⃣ 检查 tag 是否已存在
      - name: Check if tag exists
        id: check_tag
        run: |
          if git ls-remote --tags origin | grep -q "refs/tags/${{ steps.get_version.outputs.version }}$"; then
            echo "Version ${{ steps.get_version.outputs.version }} already exists."
            exit 1
          fi

      # 7️⃣ 创建 Git tag
      - name: Create tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ steps.get_version.outputs.version }}',
              sha: context.sha
            })

      # 8️⃣ 创建 draft release 并附加打包文件
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./lunar-info-card.js
          name: "Lunar Info Card ${{ steps.get_version.outputs.version }}"
          tag_name: "${{ steps.get_version.outputs.version }}"
          draft: true
          generate_release_notes: false
